{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","cn","type","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAc,SA+Bb,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAjCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKd,EACH,OAAOY,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcM,UAGTN,EAOcO,CACnBlB,EACAK,EACAE,GAQF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAWC,IAAG,iBAAkB,CAC9B,WAAYf,IAAcJ,IAE5BoB,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,IAL9B,iCAUA,wBACEoB,KAAK,SACLF,UAAWC,IAAG,oBAAqB,CACjC,WAAYf,IAAcH,IAE5BoB,QAAS,kBAAMhB,EAAaJ,IAL9B,4BAUA,wBACEmB,KAAK,SACLF,UAAWC,IAAG,oBAAqB,CACjC,YAA6B,IAAjBb,IAEde,QAAS,kBAAMd,GAAgB,SAACe,GAAD,OAAcA,MAL/C,sBAUElB,GAAaE,IACb,wBACEc,KAAK,SACLF,UAAU,4BACVG,QA1CI,WACZhB,EAAa,IACbE,GAAgB,IAqCV,sBAUJ,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7GlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.513f94d1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport cn from \"classnames\";\n\nimport \"bulma/css/bulma.css\";\nimport \"./App.scss\";\n\nexport const goodsFromServer = [\n  \"Dumplings\",\n  \"Carrot\",\n  \"Eggs\",\n  \"Ice cream\",\n  \"Apple\",\n  \"Bread\",\n  \"Fish\",\n  \"Honey\",\n  \"Jam\",\n  \"Garlic\",\n];\n\nconst SORT_FIELD_ALPHABETICALLY = \"alphabetically\";\nconst SORT_LENGTH = \"length\";\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: string,\n  reverseField: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(\"\");\n  const [reverseField, setReverseField] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n\n  const reset = () => {\n    setSortField(\"\");\n    setReverseField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          className={cn(\"button is-info\", {\n            \"is-light\": sortField !== SORT_FIELD_ALPHABETICALLY,\n          })}\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\"button is-success\", {\n            \"is-light\": sortField !== SORT_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\"button is-warning\", {\n            \"is-light\": reverseField === false,\n          })}\n          onClick={() => setReverseField((current) => !current)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}